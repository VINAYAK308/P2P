{"ast":null,"code":"var _jsxFileName = \"/Users/trushantramdasjadhav/Desktop/BheemSir1/frontend/src/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate instead of useHistory\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate(); // Initialize useNavigate\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//       // Redirect based on role using navigate\n//       if (data.role === 'admin') {\n//         navigate('/admin-dashboard');\n//       } else if (data.role === 'superadmin') {\n//         navigate('/superadmin-dashboard');\n//       } else if (data.role === 'student') {\n//         navigate('/student-dashboard');\n//       }\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('student'); // Default role set to 'student'\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:3001/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        role\n      }) // Include the role in the request body\n    });\n    const data = await response.json();\n    if (data.success) {\n      setMessage('Login successful!');\n      // Redirect based on role using navigate\n      if (data.role === 'Admin') {\n        setMessage('Welcome to Admin Dashboard');\n        navigate('./admin-dashboard');\n      } else if (data.role === 'Superadmin') {\n        setMessage('Welcome to Super Admin Dashboard');\n        navigate('./superadmin-dashboard');\n      } else if (data.role === 'Student') {\n        setMessage('Welcome to Student Dashboard');\n        navigate('./student-dashboard');\n      }\n    } else {\n      setMessage('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bg-gray-900 p-8 rounded-lg shadow-lg w-96\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: role,\n          onChange: e => setRole(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"superadmin\",\n            children: \"Superadmin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"mbW30/aVvKmrRa7HKyj57HWnfgM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","role","setRole","message","setMessage","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/trushantramdasjadhav/Desktop/BheemSir1/frontend/src/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate instead of useHistory\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate(); // Initialize useNavigate\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//       // Redirect based on role using navigate\n//       if (data.role === 'admin') {\n//         navigate('/admin-dashboard');\n//       } else if (data.role === 'superadmin') {\n//         navigate('/superadmin-dashboard');\n//       } else if (data.role === 'student') {\n//         navigate('/student-dashboard');\n//       }\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('student'); // Default role set to 'student'\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch('http://localhost:3001/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password, role }), // Include the role in the request body\n    });\n\n    const data = await response.json();\n    if (data.success) {\n      setMessage('Login successful!');\n      // Redirect based on role using navigate\n      if (data.role === 'Admin') {\n        setMessage('Welcome to Admin Dashboard');\n        navigate('./admin-dashboard');\n      } else if (data.role === 'Superadmin') {\n        setMessage('Welcome to Super Admin Dashboard');\n        navigate('./superadmin-dashboard');\n      } else if (data.role === 'Student') {\n        setMessage('Welcome to Student Dashboard');\n        navigate('./student-dashboard');\n      }\n    } else {\n      setMessage('Invalid credentials');\n    }\n  };\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-black\">\n      <h2>Login</h2>\n      <form className=\"bg-gray-900 p-8 rounded-lg shadow-lg w-96\" onSubmit={handleLogin}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>User Role:</label>\n          <select\n            value={role}\n            onChange={(e) => setRole(e.target.value)}\n            required\n          >\n            <option value=\"admin\">Admin</option>\n            <option value=\"superadmin\">Superadmin</option>\n            <option value=\"student\">Student</option>\n          </select>\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}