{"ast":null,"code":"var _jsxFileName = \"/Users/trushantramdasjadhav/Desktop/BheemSir/frontend/src/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate instead of useHistory\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate(); // Initialize useNavigate\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//       // Redirect based on role using navigate\n//       if (data.role === 'admin') {\n//         navigate('/admin-dashboard');\n//       } else if (data.role === 'superadmin') {\n//         navigate('/superadmin-dashboard');\n//       } else if (data.role === 'student') {\n//         navigate('/student-dashboard');\n//       }\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [role, setRole] = useState('student'); // Default role set to 'student'\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password, role }), // Include the role in the request body\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//       // Redirect based on role using navigate\n//       if (data.role === 'admin') {\n//         setMessage('Welcome to Admin Dashboard');\n//         navigate('/admin-dashboard');\n//       } else if (data.role === 'superadmin') {\n//         setMessage('Welcome to Super Admin Dashboard');\n//         navigate('/superadmin-dashboard');\n//       } else if (data.role === 'student') {\n//         setMessage('Welcome to Student Dashboard');\n//         navigate('/student-dashboard');\n//       }\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>User Role:</label>\n//           <select\n//             value={role}\n//             onChange={(e) => setRole(e.target.value)}\n//             required\n//           >\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"superadmin\">Super Admin</option>\n//             <option value=\"student\">Student</option>\n//           </select>\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('student'); // Default role set to 'student'\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent default form submission\n    setLoading(true); // Set loading to true\n\n    try {\n      // Send login credentials to the server\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          role\n        }) // Include the role in the request body\n      });\n      const data = await response.json(); // Parse the JSON response\n\n      if (data.success) {\n        // Show welcome message based on role\n        let welcomeMessage = '';\n        switch (data.role) {\n          case 'admin':\n            welcomeMessage = 'Welcome to Admin Dashboard';\n            break;\n          case 'superadmin':\n            welcomeMessage = 'Welcome to Super Admin Dashboard';\n            break;\n          case 'student':\n            welcomeMessage = 'Welcome to Student Dashboard';\n            break;\n          default:\n            welcomeMessage = 'Role not recognized';\n        }\n\n        // Set the welcome message\n        setMessage(welcomeMessage);\n\n        // Delay navigation to show the message\n        setTimeout(() => {\n          switch (data.role) {\n            case 'admin':\n              navigate('/admin-dashboard');\n              break;\n            case 'superadmin':\n              navigate('/superadmin-dashboard');\n              break;\n            case 'student':\n              navigate('/student-dashboard');\n              break;\n            default:\n              navigate('/');\n            // Redirect to a default route if role is unrecognized\n          }\n        }, 2000); // Delay for 2 seconds\n      } else {\n        setMessage('Invalid credentials'); // Show error message if login fails\n      }\n    } catch (error) {\n      setMessage('An error occurred. Please try again later.'); // Catch any fetch errors\n    } finally {\n      setLoading(false); // Set loading to false after the request is done\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"User Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: role,\n          onChange: e => setRole(e.target.value),\n          required: true,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"superadmin\",\n            children: \"Super Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: `bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${loading ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"5Ld4dINMR5cB+GQt0JiVxx4pCa0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","role","setRole","message","setMessage","loading","setLoading","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","welcomeMessage","setTimeout","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/trushantramdasjadhav/Desktop/BheemSir/frontend/src/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate instead of useHistory\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate(); // Initialize useNavigate\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password }),\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//       // Redirect based on role using navigate\n//       if (data.role === 'admin') {\n//         navigate('/admin-dashboard');\n//       } else if (data.role === 'superadmin') {\n//         navigate('/superadmin-dashboard');\n//       } else if (data.role === 'student') {\n//         navigate('/student-dashboard');\n//       }\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [role, setRole] = useState('student'); // Default role set to 'student'\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch('http://localhost:3001/login', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ username, password, role }), // Include the role in the request body\n//     });\n\n//     const data = await response.json();\n//     if (data.success) {\n//       setMessage('Login successful!');\n//       // Redirect based on role using navigate\n//       if (data.role === 'admin') {\n//         setMessage('Welcome to Admin Dashboard');\n//         navigate('/admin-dashboard');\n//       } else if (data.role === 'superadmin') {\n//         setMessage('Welcome to Super Admin Dashboard');\n//         navigate('/superadmin-dashboard');\n//       } else if (data.role === 'student') {\n//         setMessage('Welcome to Student Dashboard');\n//         navigate('/student-dashboard');\n//       }\n//     } else {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label>Username:</label>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>User Role:</label>\n//           <select\n//             value={role}\n//             onChange={(e) => setRole(e.target.value)}\n//             required\n//           >\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"superadmin\">Super Admin</option>\n//             <option value=\"student\">Student</option>\n//           </select>\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('student'); // Default role set to 'student'\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n    setLoading(true); // Set loading to true\n\n    try {\n      // Send login credentials to the server\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password, role }), // Include the role in the request body\n      });\n\n      const data = await response.json(); // Parse the JSON response\n\n      if (data.success) {\n        // Show welcome message based on role\n        let welcomeMessage = '';\n        switch (data.role) {\n          case 'admin':\n            welcomeMessage = 'Welcome to Admin Dashboard';\n            break;\n          case 'superadmin':\n            welcomeMessage = 'Welcome to Super Admin Dashboard';\n            break;\n          case 'student':\n            welcomeMessage = 'Welcome to Student Dashboard';\n            break;\n          default:\n            welcomeMessage = 'Role not recognized';\n        }\n\n        // Set the welcome message\n        setMessage(welcomeMessage);\n\n        // Delay navigation to show the message\n        setTimeout(() => {\n          switch (data.role) {\n            case 'admin':\n              navigate('/admin-dashboard');\n              break;\n            case 'superadmin':\n              navigate('/superadmin-dashboard');\n              break;\n            case 'student':\n              navigate('/student-dashboard');\n              break;\n            default:\n              navigate('/'); // Redirect to a default route if role is unrecognized\n          }\n        }, 2000); // Delay for 2 seconds\n      } else {\n        setMessage('Invalid credentials'); // Show error message if login fails\n      }\n    } catch (error) {\n      setMessage('An error occurred. Please try again later.'); // Catch any fetch errors\n    } finally {\n      setLoading(false); // Set loading to false after the request is done\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto\">\n      <h2 className=\"text-xl font-bold mb-4\">Login</h2>\n      <form onSubmit={handleLogin} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">User Role:</label>\n          <select\n            value={role}\n            onChange={(e) => setRole(e.target.value)}\n            required\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          >\n            <option value=\"admin\">Admin</option>\n            <option value=\"superadmin\">Super Admin</option>\n            <option value=\"student\">Student</option>\n          </select>\n        </div>\n        <button \n          type=\"submit\" \n          disabled={loading}\n          className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\n        >\n          {loading ? 'Logging in...' : 'Login'}\n        </button>\n      </form>\n      {message && <p className=\"text-green-500\">{message}</p>}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}